@use "sass:math";
@function contains($var, $list) {
    $_out: false;
    @each $item in $list {
        @if $item == $var {
            $_out: true;
        }
    }
    @return $_out;
}
@function per($size, $divider: $guide) {
    $per: math.div($size, $divider) * 100;
    @return #{$per + '%'};
}
@function rem($size) {
    $remSize: math.div($size, $baseFontSize);
    @if $size == 1  or $size == -1 {
        @return #{$size}px;
    }
    @return #{$remSize}rem;
}
@function set-lightness($color, $amount) {
    @if (lightness($color) > $contrastAmount) {
        @return darken($color, $amount);
    } @else {
        @return lighten($color, $amount);
    }
}
@function set-color($color, $color-dark: $setColorDark, $color-light: $setColorLight) {
    @if contains($color, $setColorLightList) {
        @return $color-light;
    }
    @if contains($color, $setColorDarkList) {
        @return $color-dark;
    }
    @if (lightness($color) > $contrastAmount) {
        @return $color-dark;
    } @else {
        @return $color-light;
    }
}
@function c($color, $opacity: 1) {
    @if $opacity == 1 {
        @return var(--#{$color});
    } @else {
        @return rgba(var(--#{$color}-rgb), $opacity);
    }
}
@function sc($color, $opacity: 1) {
    @if $opacity == 1 {
        @return var(--#{$color}-sc);
    } @else {
        @return rgba(var(--#{$color}-sc-rgb), $opacity);
    }
}
@function f($size, $line: $size + 4) {
    @return rem($size) / math.div($line, $size);
}
@function div($value, $divider) {
    @return math.div($value, $divider);
}
@function size($size, $name) {
    @return var(--ui-kit-#{$size}-#{$name});
}
@function circle-position($size, $border-size, $coordinate) {
    $center: (div($size, 2)) - $border-size - (div($border-size, 2));
    $half-size-border: (div($size, 2)) - $border-size + (div($border-size, 2));
    $root: 0.70710678118;
    @if $coordinate == y {
        @return round($center - ($half-size-border * $root));
    } @else {
        @return round($center + ($half-size-border * $root));
    }
}
